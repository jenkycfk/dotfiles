
call plug#begin('~/.vim/bundle')
"" self color beautify for font and cusor line
Plug 'zzuse/molokai'
" self log syntax color
Plug 'zzuse/log.vim'
" python module search"
Plug 'zzuse/vim-pymodule'
" status line 1
Plug 'vim-airline/vim-airline'
" status line 2
Plug 'zzuse/statusline.vim'
" for cscope support
Plug 'zzuse/cscope_maps.vim'

" google search engine
Plug 'szw/vim-g'
" nerdtree On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

"" all lanugage support
"Plug 'scrooloose/syntastic'
Plug 'nsf/gocode', { 'rtp': 'vim', 'do': '~/.vim/bundle/gocode/vim/symlink.sh' }
Plug 'fatih/vim-go'
" multi language syntax compile support
Plug 'sheerun/vim-polyglot'

" compete
"Plug 'Shougo/neocomplete'
"let g:neocomplete#enable_at_startup = 0
Plug 'Shougo/deoplete.nvim'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
let g:deoplete#enable_at_startup = 0
" snippet
Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'
" git branch
Plug 'tpope/vim-fugitive'
" json sort 
"Plug 'axiaoxin/vim-json-line-format'
" Most Recently Used (MRU) files monitoring
Plug 'ctrlpvim/ctrlp.vim'
" Indent
Plug 'Yggdroot/indentLine'
" Python support
Plug 'python-mode/python-mode', { 'branch': 'develop' }

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
"" for manual control
" PlugInstall [name ...] [#threads]   Install plugins
" PlugUpdate [name ...] [#threads]    Install or update plugins
" PlugClean[!]      Remove unused directories (bang version will clean without prompt)
" PlugUpgrade       Upgrade vim-plug itself
" PlugStatus        Check the status of plugins
" PlugDiff          See the updated changes from the previous PlugUpdate
" PlugSnapshot
